# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2024, GSG Robots
# This file is distributed under the same license as the gsgr package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2024.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: gsgr \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-12-22 19:32+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: de\n"
"Language-Team: de <LL@li.org>\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.16.0\n"

#: ../../api/gsgr/conditions.rst:2
msgid "``gsgr.conditions``"
msgstr ""

#: gsgr.conditions:1 of
msgid "Basic conditions"
msgstr ""

#: gsgr.conditions.static:1 of
msgid "Static condition. Either always fulfilled or always unfulfilled."
msgstr ""

#: ../../api/gsgr/conditions.rst ../../api/gsgr/correctors.rst
#: ../../api/gsgr/display.rst ../../api/gsgr/math.rst ../../api/gsgr/menu.rst
#: ../../api/gsgr/movement.rst ../../api/gsgr/utils.rst
msgid "Parameter"
msgstr ""

#: gsgr.conditions.static:4 of
msgid ""
"The static value to stay at. :py:obj:`True` means 100%, :py:obj:`False` "
"means 0%."
msgstr ""

#: ../../api/gsgr/conditions.rst ../../api/gsgr/correctors.rst
#: ../../api/gsgr/math.rst ../../api/gsgr/menu.rst ../../api/gsgr/movement.rst
#: ../../api/gsgr/utils.rst
msgid "Rückgabetyp"
msgstr ""

#: gsgr.conditions.AND:6 gsgr.conditions.NOT:4 gsgr.conditions.OR:6
#: gsgr.conditions.THEN:6 gsgr.conditions.cm:4 gsgr.conditions.deg:4
#: gsgr.conditions.sec:4 gsgr.conditions.static:6 of
msgid ":sphinx_autodoc_typehints_type:`\\:py\\:class\\:\\`\\~gsgr.types.Condition\\``"
msgstr ""

#: gsgr.conditions.cm:1 of
msgid "Drive/Turn until wheels turned for given distance (cm)."
msgstr ""

#: gsgr.conditions.sec:1 of
msgid "Drive/Turn for given duration (sec)."
msgstr ""

#: gsgr.conditions.deg:1 of
msgid "Drive/Turn until certain angle is reached."
msgstr ""

#: gsgr.conditions.AND:1 gsgr.conditions.OR:1 gsgr.conditions.THEN:1 of
msgid "Helper to chain conditions."
msgstr ""

#: gsgr.conditions.THEN:3 of
msgid ""
"The two conditions are executed after each other. :py:obj:`THEN(cm(3), "
"cm(5))` will have the same result as :py:obj:`cm(8)`"
msgstr ""

#: gsgr.conditions.OR:3 of
msgid ""
"The two conditions are executed simultaneously, until one is fulfilled. "
":py:obj:`OR(cm(3), cm(5))` will have the same result as :py:obj:`cm(3)`"
msgstr ""

#: gsgr.conditions.AND:3 of
msgid ""
"The two conditions are executed simultaneously, until both are fulfilled."
" :py:obj:`AND(cm(3), cm(5))` will have the same result as :py:obj:`cm(5)`"
msgstr ""

#: gsgr.conditions.NOT:1 of
msgid "Helper to invert conditions."
msgstr ""

#: ../../api/gsgr/configuration.rst:2
msgid "``gsgr.configuration``"
msgstr ""

#: gsgr.configuration.Config:1 of
msgid "The configuration for the robot"
msgstr ""

#: gsgr.configuration.Config.debug_mode:1 gsgr.menu.Menu.landscape:1 of
msgid "**Type:**    :py:class:`bool`"
msgstr ""

#: gsgr.configuration.Config.debug_mode:1 of
msgid "Whether the debug mode should be enabled."
msgstr ""

#: gsgr.configuration.Config.d_correction:1
#: gsgr.configuration.Config.i_correction:1
#: gsgr.configuration.Config.loop_throttle:1
#: gsgr.configuration.Config.p_correction:1
#: gsgr.configuration.Config.speed_multiplier:1
#: gsgr.configuration.HardwareConfig.tire_radius:1 of
msgid "**Type:**    :py:class:`float`"
msgstr ""

#: gsgr.configuration.Config.speed_multiplier:1 of
msgid ""
"The speed multiplier for the robot. This should be a float between -1 and"
" 1. Negative values will make the robot drive backwards."
msgstr ""

#: gsgr.configuration.Config.gyro_tolerance:1 gsgr.enums.Attachment.BACK_LEFT:1
#: gsgr.enums.Attachment.BACK_RIGHT:1 gsgr.enums.Attachment.FRONT_LEFT:1
#: gsgr.enums.Attachment.FRONT_RIGHT:1 gsgr.menu.Menu.position:1
#: gsgr.utils.DegreeOMeter.started_at:1 gsgr.utils.Timer.started_at:1 of
msgid "**Type:**    :py:class:`int`"
msgstr ""

#: gsgr.configuration.HardwareConfig:1 of
msgid "The hardware configuration for the robot"
msgstr ""

#: gsgr.configuration.HardwareConfig.tire_radius:1 of
msgid "The radius of the tire in centimeters"
msgstr ""

#: gsgr.configuration.HardwareConfig.brick:1 of
msgid "**Type:**    :py:class:`~spike.PrimeHub`"
msgstr ""

#: gsgr.configuration.HardwareConfig.brick:1 of
msgid "An instance of the hub API used in the robot"
msgstr ""

#: gsgr.configuration.HardwareConfig.drive_shaft:1
#: gsgr.configuration.HardwareConfig.gear_selector:1
#: gsgr.configuration.HardwareConfig.left_motor:1
#: gsgr.configuration.HardwareConfig.right_motor:1 of
msgid "**Type:**    :py:class:`~spike.Motor`"
msgstr ""

#: gsgr.configuration.HardwareConfig.gear_selector:1 of
msgid "The motor that selects the attachment gear"
msgstr ""

#: gsgr.configuration.HardwareConfig.drive_shaft:1 of
msgid "The motor that drives the robots' attachment gears"
msgstr ""

#: gsgr.configuration.HardwareConfig.left_motor:1 of
msgid "The motor that drives the left tire"
msgstr ""

#: gsgr.configuration.HardwareConfig.right_motor:1 of
msgid "The motor that drives the right tire"
msgstr ""

#: gsgr.configuration.HardwareConfig.driving_motors:1 of
msgid "**Type:**    :py:class:`~spike.MotorPair`"
msgstr ""

#: gsgr.configuration.HardwareConfig.driving_motors:1 of
msgid ""
"The motor pair that drives the robot. This should be the same as the left"
" and right motors combined."
msgstr ""

#: ../../api/gsgr/correctors.rst:2
msgid "``gsgr.correctors``"
msgstr ""

#: gsgr.correctors:1 of
msgid "Basic correctors"
msgstr ""

#: gsgr.correctors.gyro_drive_pid:1 of
msgid "Gyro Drive PID"
msgstr ""

#: gsgr.correctors.accelerate:4 gsgr.correctors.decelerate:4
#: gsgr.correctors.gyro_drive_pid:4 gsgr.correctors.gyro_turn_pid:4
#: gsgr.correctors.pause:4 gsgr.correctors.sigmoid_accelerate_sec:6 of
msgid "Parent corrector [TODO: Read more]"
msgstr ""

#: gsgr.correctors.gyro_drive_pid:6 of
msgid "Direction to drive in/correct towards to"
msgstr ""

#: gsgr.correctors.gyro_drive_pid:8 gsgr.correctors.gyro_turn_pid:8 of
msgid "p correction value. Defaults to general config."
msgstr ""

#: gsgr.correctors.gyro_drive_pid:10 gsgr.correctors.gyro_turn_pid:10 of
msgid "i correction value. Defaults to general config."
msgstr ""

#: gsgr.correctors.gyro_drive_pid:12 gsgr.correctors.gyro_turn_pid:12 of
msgid "d correction value. Defaults to general config."
msgstr ""

#: gsgr.correctors.gyro_drive_pid:14 gsgr.correctors.gyro_turn_pid:14 of
msgid "tolerance for target degree. Defaults to general config."
msgstr ""

#: gsgr.correctors.accelerate:9 gsgr.correctors.decelerate:8
#: gsgr.correctors.gyro_drive_pid:16 gsgr.correctors.gyro_turn_pid:16
#: gsgr.correctors.pause:10 gsgr.correctors.sigmoid_accelerate_sec:10
#: gsgr.correctors.speed:8 of
msgid ":sphinx_autodoc_typehints_type:`\\:py\\:class\\:\\`\\~gsgr.types.Corrector\\``"
msgstr ""

#: gsgr.correctors.speed:1 of
msgid "Static speed. Used at the top of a corrector chain."
msgstr ""

#: gsgr.correctors.speed:4 of
msgid "Speed of left motor."
msgstr ""

#: gsgr.correctors.speed:6 of
msgid "Speed of right motor. Defaults to :py:obj:`left`."
msgstr ""

#: gsgr.correctors.gyro_turn_pid:1 of
msgid "Gyro Turn PID"
msgstr ""

#: gsgr.correctors.gyro_turn_pid:6 of
msgid "Direction to turn to"
msgstr ""

#: gsgr.correctors.pause:1 of
msgid "Auxiliary corrector to pause in a specific time range."
msgstr ""

#: gsgr.correctors.pause:6 of
msgid "Amount of seconds to stop after."
msgstr ""

#: gsgr.correctors.pause:8 of
msgid "Amount of seconds to stop for."
msgstr ""

#: gsgr.correctors.accelerate:1 of
msgid "Auxiliary corrector to accelerate in a specific time range."
msgstr ""

#: gsgr.correctors.accelerate:5 gsgr.correctors.sigmoid_accelerate_sec:8 of
msgid "Amount of seconds to accelerate for."
msgstr ""

#: gsgr.correctors.accelerate:7 of
msgid "Amount of seconds to delay accelerating."
msgstr ""

#: gsgr.correctors.decelerate:1 of
msgid "Auxiliary corrector to deccelerate in a specific time range."
msgstr ""

#: gsgr.correctors.decelerate:5 of
msgid "Amount of seconds to deccelerate after."
msgstr ""

#: gsgr.correctors.decelerate:6 of
msgid "Amount of seconds to deccelerate for."
msgstr ""

#: gsgr.correctors.sigmoid_accelerate_sec:1 of
msgid ""
"Auxiliary corrector to accelerate in a specific time range, softened "
"using the sigmoid function."
msgstr ""

#: gsgr.correctors.sigmoid_accelerate_sec:3 of
msgid "TODO: WTH is smooth & stretch again?"
msgstr ""

#: ../../api/gsgr/display.rst:2
msgid "``gsgr.display``"
msgstr ""

#: gsgr.display:1 of
msgid "Display utils"
msgstr ""

#: gsgr.display.light_up_display:1 of
msgid "Show given symbol on light matrix."
msgstr ""

#: gsgr.display.light_up_display:4 of
msgid "Whether to display a border on the right, rather than the two dots."
msgstr ""

#: gsgr.display.light_up_display:6 of
msgid "Whether to display a border on the left, rather than the two dots."
msgstr ""

#: gsgr.display.light_up_display:8 of
msgid "Whether to display at full brightness."
msgstr ""

#: ../../api/gsgr/enums.rst:2
msgid "``gsgr.enums``"
msgstr ""

#: gsgr.enums:1 of
msgid "static enums for basic constants"
msgstr ""

#: gsgr.enums.Color:1 of
msgid "SPIKE-Prime colors"
msgstr ""

#: gsgr.enums.Color.GREEN:1 gsgr.enums.Color.RED:1 gsgr.enums.Color.WHITE:1
#: gsgr.enums.Color.YELLOW:1 gsgr.menu.MenuItem.color:1 of
msgid "**Type:**    :py:class:`str`"
msgstr ""

#: gsgr.enums.Attachment:1 of
msgid "Attachment numbers after position"
msgstr ""

#: ../../api/gsgr/exceptions.rst:2
msgid "``gsgr.exceptions``"
msgstr ""

#: gsgr.exceptions:1 of
msgid "Custom exceptions"
msgstr ""

#: gsgr.exceptions.WrongUnitError:1 of
msgid "Invalid unit used."
msgstr ""

#: gsgr.exceptions.WrongUnitError:3 of
msgid "We no longer use unit constants."
msgstr ""

#: gsgr.exceptions.BatteryLowError:1 of
msgid "Error raised when in debug mode and running motors while battery low."
msgstr ""

#: gsgr.exceptions.BatteryLowError:3 of
msgid "Read more :py:func:`here <gsgr.movement.check_battery>`"
msgstr ""

#: gsgr.exceptions.EnterDebugMenu:1 of
msgid "Error raised when debug menu should be started."
msgstr ""

#: gsgr.exceptions.EnterDebugMenu:3 of
msgid "There is no debug menu anymore."
msgstr ""

#: gsgr.exceptions.StopRun:1 of
msgid "Raise to stop run immediately."
msgstr ""

#: gsgr.exceptions.ExitMenu:3 gsgr.exceptions.StopRun:3 of
msgid "Only meant for internal use."
msgstr ""

#: gsgr.exceptions.ExitMenu:1 of
msgid "Raise to exit menu."
msgstr ""

#: ../../api/gsgr/index.rst:4 ../../api/index.rst:4
msgid "Contents:"
msgstr ""

#: ../../api/gsgr/index.rst:2
msgid "``gsgr``"
msgstr ""

#: ../../api/gsgr/math.rst:2
msgid "``gsgr.math``"
msgstr ""

#: gsgr.math:1 of
msgid "Some basic math utility functions."
msgstr ""

#: gsgr.math.sigmoid:1 of
msgid "Implementatuion of :wikipedia:`Sigmoid function`"
msgstr ""

#: gsgr.math.sigmoid:4 of
msgid "function parameter x"
msgstr ""

#: gsgr.math.clamp:10 gsgr.math.sigmoid:6 of
msgid ":sphinx_autodoc_typehints_type:`\\:py\\:class\\:\\`float\\``"
msgstr ""

#: gsgr.math.clamp:1 of
msgid "Helper function to ensure a number is in a a given range."
msgstr ""

#: gsgr.math.clamp:4 of
msgid "Value to min-max / clamp."
msgstr ""

#: gsgr.math.clamp:6 of
msgid "minimum value for :py:obj:`value`."
msgstr ""

#: gsgr.math.clamp:8 of
msgid "maximum value for :py:obj:`value`."
msgstr ""

#: ../../api/gsgr/math.rst ../../api/gsgr/menu.rst
msgid "Rückgabe"
msgstr ""

#: gsgr.math.clamp:11 of
msgid ":py:obj:`minimum` if :py:obj:`value` is below :py:obj:`minimum`"
msgstr ""

#: gsgr.math.clamp:12 of
msgid ":py:obj:`maximum` if :py:obj:`value` is above :py:obj:`maximum`"
msgstr ""

#: gsgr.math.clamp:13 of
msgid ""
":py:obj:`value` if :py:obj:`value` is between :py:obj:`minimum` and "
":py:obj:`maximum`"
msgstr ""

#: ../../api/gsgr/menu.rst:2
msgid "``gsgr.menu``"
msgstr ""

#: gsgr.menu:1 of
msgid "Module for menu management."
msgstr ""

#: gsgr.menu:3 of
msgid "Also supplies run class, being a menu item."
msgstr ""

#: gsgr.menu.Menu:1 gsgr.menu.MenuItem:1 of
msgid "Bases: :py:class:`object`"
msgstr ""

#: gsgr.menu.MenuItem:2 of
msgid ""
"Charackter or digit to display in menu, indicating which menu item is "
"selected. Sets :py:attr:`display_as` initially."
msgstr ""

#: gsgr.menu.MenuItem:4 of
msgid ""
"Color of the status light to indicate which menu item is selected. Sets "
":py:attr:`color` initially. Defaults to `\"white\"`."
msgstr ""

#: gsgr.menu.MenuItem.display_as:1 of
msgid "**Type:**    :py:data:`~typing.Union`\\[:py:class:`int`, :py:class:`str`]"
msgstr ""

#: gsgr.menu.MenuItem.display_as:1 of
msgid ""
"Character or digit to display in menu, indicating which menu item is "
"selected."
msgstr ""

#: gsgr.menu.MenuItem.color:1 of
msgid "Color of the status light to indicate which menu item is selected."
msgstr ""

#: gsgr.menu.MenuItem.callback:1 of
msgid "**Type:**    :py:data:`~typing.Callable`"
msgstr ""

#: gsgr.menu.MenuItem.callback:1 of
msgid "Function to call when menu item is selected."
msgstr ""

#: gsgr.menu.MenuItem.get_callback:1 of
msgid "Getter function for :py:attr:`callback`."
msgstr ""

#: gsgr.menu.MenuItem.get_callback:4 of
msgid ":sphinx_autodoc_typehints_type:`\\:py\\:data\\:\\`\\~typing.Callable\\``"
msgstr ""

#: gsgr.menu.MenuItem.set_callback:1 of
msgid "Setter function for :py:attr:`callback`."
msgstr ""

#: gsgr.menu.MenuItem.set_callback:4 of
msgid ""
"Function to set as callback. If not provided, returns a decorator "
"function. Defaults to `None`."
msgstr ""

#: gsgr.menu.MenuItem.cleanup:1 of
msgid "Funtion called after menu item callback has finished."
msgstr ""

#: gsgr.menu.MenuItem.stop:1 of
msgid ""
"Helper function to stop the callback function of a "
":py:class:`~gsgr.menu.MenuItem`."
msgstr ""

#: gsgr.menu.Menu.exit gsgr.menu.MenuItem.stop gsgr.movement.check_battery
#: gsgr.movement.drive gsgr.movement.free_attachment
#: gsgr.movement.free_attachments gsgr.movement.gyro_drive
#: gsgr.movement.gyro_turn gsgr.movement.hold_attachment
#: gsgr.movement.run_attachment of
msgid "raises"
msgstr ""

#: gsgr.menu.MenuItem.stop:3 of
msgid ":py:class:`~gsgr.exceptions.StopRun`"
msgstr ""

#: gsgr.menu.Run:1 of
msgid "Bases: :py:class:`~gsgr.menu.MenuItem`"
msgstr ""

#: gsgr.menu.Run:2 of
msgid ""
"Passed to :py:class:`~gsgr.menu.MenuItem`. Sets :py:attr:`display_as` "
"initially."
msgstr ""

#: gsgr.menu.Run:4 of
msgid ""
"Passed to :py:class:`~gsgr.menu.MenuItem`. Sets :py:attr:`color` "
"initially."
msgstr ""

#: gsgr.menu.Run:6 of
msgid ""
"A context manager to execute the run in. Designed for "
":py:class:`~gsgr.configuration.Config` calls. Sets :py:attr:`context` "
"initially."
msgstr ""

#: gsgr.menu.Run.context:1 of
msgid "**Type:**    :py:class:`~typing.ContextManager`"
msgstr ""

#: gsgr.menu.Run.context:1 of
msgid "A context manager in which the run is being executed."
msgstr ""

#: gsgr.menu.Run.context:3 of
msgid ""
"This is implemented to support :py:class:`~gsgr.configuration.Config` "
"changes for individual runs."
msgstr ""

#: gsgr.menu.Run.get_callback:1 of
msgid ""
"Patched verison of :py:meth:`MenuItem.get_callback` to enter the context "
"manager / loading run specific config before returning the callback."
msgstr ""

#: gsgr.menu.Run.cleanup:1 of
msgid ""
"Stop all motors and exit the context manager. This means resetting the "
"config."
msgstr ""

#: gsgr.menu.Menu:1 of
msgid "A general menu holding :py:class:`~gsgr.menu.MenuItem` s"
msgstr ""

#: gsgr.menu.Menu:4 of
msgid ""
"a list of :py:class:`~gsgr.menu.MenuItem` s to be included initially. "
"Defaults to an empty list."
msgstr ""

#: gsgr.menu.Menu:6 of
msgid "whether to optimize controls for landscape mode. Defaults to False."
msgstr ""

#: gsgr.menu.Menu.items:1 of
msgid "**Type:**    :py:class:`list`\\[:py:class:`~gsgr.menu.MenuItem`]"
msgstr ""

#: gsgr.menu.Menu.items:1 of
msgid "A list of all :py:class:`~gsgr.menu.MenuItem` s in the menu"
msgstr ""

#: gsgr.menu.Menu.landscape:1 of
msgid "Whether controls are optimized for landscape usage"
msgstr ""

#: gsgr.menu.Menu.position:1 of
msgid "Currently displayed menu item index"
msgstr ""

#: gsgr.menu.Menu.add_item:1 of
msgid "Helper function to append an item to the menu"
msgstr ""

#: gsgr.menu.Menu.add_item:4 of
msgid "Item to append"
msgstr ""

#: gsgr.menu.Menu.get:1 of
msgid "Show menu and allow to select item"
msgstr ""

#: gsgr.menu.Menu.get:3 of
msgid ":sphinx_autodoc_typehints_type:`\\:py\\:class\\:\\`\\~gsgr.menu.MenuItem\\``"
msgstr ""

#: gsgr.menu.Menu.get:4 of
msgid "the selected item"
msgstr ""

#: gsgr.menu.Menu.loop:1 of
msgid ""
"Show the menu and run the callback of the selected item in an infinite "
"loop."
msgstr ""

#: gsgr.menu.Menu.loop:4 of
msgid ""
"whether to scroll to the next item after executing the callback of a "
":py:class:`~gsgr.menu.MenuItem` automatically."
msgstr ""

#: gsgr.menu.Menu.exit:1 of
msgid "Helper function to exit :py:meth:`~gsgr.menu.Menu.loop`."
msgstr ""

#: gsgr.menu.Menu.exit:3 of
msgid "ExitMenu"
msgstr ""

#: ../../api/gsgr/movement.rst:2
msgid "``gsgr.movement``"
msgstr ""

#: gsgr.movement:1 of
msgid "Motor control functions and presets"
msgstr ""

#: gsgr.movement.check_battery:1 of
msgid "Helper function to error out on low battery in debug mode."
msgstr ""

#: gsgr.movement.check_battery:3 of
msgid ""
"This function is ran on all activities including motor movement. It will "
"crash the run with the :py:exc:`~gsgr.exceptions.BatteryLowError` if the "
"battery capacity is reported to be below 100%. This is meant to force us "
"to keep the robot charged when coding at all times to ensure consistant "
"driving behavior."
msgstr ""

#: gsgr.movement.check_battery:7 of
msgid ":py:exc:`~gsgr.exceptions.BatteryLowError`"
msgstr ""

#: gsgr.movement.hold_attachment:1 of
msgid "Select gear to apply torque, meant to hold attachment in place."
msgstr ""

#: gsgr.movement.free_attachment:8 gsgr.movement.hold_attachment:4
#: gsgr.movement.run_attachment:6 of
msgid ""
"The number of the attachment gear. Preferably use the "
":py:class:`gsgr.enums.Attachment` enum. [TODO: Read more]"
msgstr ""

#: gsgr.movement.drive:8 gsgr.movement.free_attachment:10
#: gsgr.movement.free_attachments:7 gsgr.movement.gyro_drive:26
#: gsgr.movement.gyro_turn:26 gsgr.movement.hold_attachment:6
#: gsgr.movement.run_attachment:16 of
msgid ""
":py:exc:`~gsgr.exceptions.BatteryLowError` (more: "
":py:func:`check_battery`)"
msgstr ""

#: gsgr.movement.free_attachment:1 of
msgid ""
"Select any other gear to release torque, meant to enable the attachment "
"of moving freely."
msgstr ""

#: gsgr.movement.free_attachment:3 of
msgid ""
"When multiple attachments need to be freed at the same time, use "
":py:func:`hold_attachment` to specifically select one attachment not to "
"be freed."
msgstr ""

#: gsgr.movement.free_attachment:5 of
msgid ""
"When all attachments need to be freed at the same time, use "
":py:func:`free_attachemnts`."
msgstr ""

#: gsgr.movement.free_attachments:1 of
msgid ""
"Move gearshaft into a position between two attachments to release torque "
"on all attachments at the same time, meant to enable all attachments of "
"moving freely."
msgstr ""

#: gsgr.movement.free_attachments:4 of
msgid ""
"Use with care, this may still parially lock attachments in place from "
"time to time. Only use if really needed! Check :py:func:`free_attachment`"
" whenever possible."
msgstr ""

#: gsgr.movement.run_attachment:1 of
msgid "Move attachment for given time or until stopped"
msgstr ""

#: gsgr.movement.run_attachment:3 of
msgid ""
"If run with ``duration``, runs until duration passed. If run without "
"``duration``, only starts and call finished immideately after starting "
"motor."
msgstr ""

#: gsgr.movement.run_attachment:8 of
msgid "Speed to move attachment at, in percent. Value from 0 to 100."
msgstr ""

#: gsgr.movement.run_attachment:10 of
msgid ""
"Time in seconds to stop after. If not supplied, motor will be started "
"without ending condition."
msgstr ""

#: gsgr.movement.run_attachment:12 of
msgid ""
"Whether to stop the motion if the motor reports it is being "
"blocked/stalled."
msgstr ""

#: gsgr.movement.run_attachment:14 of
msgid ""
"Whether to shortly unselect the attachment gear after the motion. This "
"can be used to release tension and stress on parts after moving against a"
" blockade."
msgstr ""

#: gsgr.movement.run_attachment:18 gsgr.utils.DegreeOMeter.reset:6
#: gsgr.utils.Timer.reset:4 of
msgid ":sphinx_autodoc_typehints_type:`\\:py\\:obj\\:\\`None\\``"
msgstr ""

#: gsgr.movement.stop_attachment:1 of
msgid ""
"Stop attachment movement. Only needed if :py:func:`run_attachment` was "
"called without duration."
msgstr ""

#: gsgr.movement.drive:1 of
msgid "General drive function, mostly only for internal use."
msgstr ""

#: gsgr.movement.drive:4 of
msgid "a generator supplying speeds at request. [TODO: Read more]"
msgstr ""

#: gsgr.movement.drive:6 of
msgid "a generator reporting whether the motion is finished. [TODO: Read more]"
msgstr ""

#: gsgr.movement.gyro_drive:1 gsgr.movement.gyro_turn:1 of
msgid ""
"Gyro Drive. Shortcut for :py:func:`drive` with "
":py:func:`~gsgr.correctors.gyro_drive_pid` as speed generator."
msgstr ""

#: gsgr.movement.gyro_drive:4 of
msgid "Direction to drive in/correct towards. Value from -180 to 180"
msgstr ""

#: gsgr.movement.gyro_drive:6 of
msgid "Speed to drive at, in percent. Value from 0 to 100."
msgstr ""

#: gsgr.movement.gyro_drive:8 of
msgid "Condition to end at. [TODO: Read more]"
msgstr ""

#: gsgr.movement.gyro_drive:10 gsgr.movement.gyro_turn:10 of
msgid "P Correction Value for PID-Controller. Defaults to general config."
msgstr ""

#: gsgr.movement.gyro_drive:12 gsgr.movement.gyro_turn:12 of
msgid "I Correction Value for PID-Controller. Defaults to general config."
msgstr ""

#: gsgr.movement.gyro_drive:14 gsgr.movement.gyro_drive:16
#: gsgr.movement.gyro_turn:14 gsgr.movement.gyro_turn:16 of
msgid "D Correction Value for PID-Controller. Defaults to general config."
msgstr ""

#: gsgr.movement.gyro_drive:18 gsgr.movement.gyro_turn:18 of
msgid ""
"Condition to start accelerating at. (Don't know why anyone would ever "
"want to do this...) Same values as for :py:obj:`do_for`"
msgstr ""

#: gsgr.movement.gyro_drive:20 gsgr.movement.gyro_turn:20 of
msgid ""
"Condition to determine how long to accelerate. Same values as for "
":py:obj:`do_for`"
msgstr ""

#: gsgr.movement.gyro_drive:22 gsgr.movement.gyro_turn:22 of
msgid "Condition to start deccelerating at. Same values as for :py:obj:`do_for`"
msgstr ""

#: gsgr.movement.gyro_drive:24 gsgr.movement.gyro_turn:24 of
msgid ""
"Condition to determine how long to deccelerate. Same values as for "
":py:obj:`do_for`"
msgstr ""

#: gsgr.movement.gyro_turn:4 of
msgid "Direction to turn towards. Value from -180 to 180"
msgstr ""

#: gsgr.movement.gyro_turn:6 of
msgid "Speed to turn at, in percent. Value from 0 to 100."
msgstr ""

#: gsgr.movement.gyro_turn:8 of
msgid ""
"Condition to end at. Use none to end when target direction is reached. "
"[TODO: Read more]"
msgstr ""

#: gsgr.movement.gyro_set_origin:1 of
msgid ""
"Reset Gyro-Sensor Origin. Should be used at least once in the beginnign "
"of each run."
msgstr ""

#: ../../api/gsgr/types.rst:2
msgid "``gsgr.types``"
msgstr ""

#: gsgr.types:1 of
msgid "Types to enable easier overview"
msgstr ""

#: gsgr.types.Condition:1 of
msgid ""
"Bases: :py:class:`~typing.Iterator`\\ [:py:class:`tuple`\\ "
"[:py:class:`int`]]"
msgstr ""

#: gsgr.types.Corrector:1 of
msgid ""
"Bases: :py:class:`~typing.Iterator`\\ [:py:class:`tuple`\\ "
"[:py:class:`int`, :py:class:`int`]]"
msgstr ""

#: ../../api/gsgr/utils.rst:2
msgid "``gsgr.utils``"
msgstr ""

#: gsgr.utils.Timer:1 of
msgid "Helper class to time things."
msgstr ""

#: gsgr.utils.Timer.started_at:1 of
msgid "Timestamp of last reset"
msgstr ""

#: gsgr.utils.Timer.reset:1 of
msgid "Reset the timer."
msgstr ""

#: gsgr.utils.Timer.elapsed:1 of
msgid "Elapsed time in seconds."
msgstr ""

#: gsgr.utils.Timer.elapsed_ms:1 of
msgid "Elapsed time in milliseconds."
msgstr ""

#: gsgr.utils.DegreeOMeter:1 of
msgid "Helper class to measure directions relatively to each other."
msgstr ""

#: gsgr.utils.DegreeOMeter.started_at:1 of
msgid "Zero-point offset to action gyro sensor values."
msgstr ""

#: gsgr.utils.DegreeOMeter.reset:1 of
msgid "Set current direction as origin."
msgstr ""

#: gsgr.utils.DegreeOMeter.reset:4 of
msgid "Unused."
msgstr ""

#: gsgr.utils.DegreeOMeter.oeioei:1 of
msgid "Current direction relative to selected origin in -180 to 180 range."
msgstr ""

#: gsgr.utils.DegreeOMeter.zts:1 of
msgid "Current direction relative to selected origin in 0 to 360 range."
msgstr ""

#: gsgr.utils.zts_to_oeioei:1 of
msgid "Helper function to convert 0 to 360deg angle to -180 to 180deg angle."
msgstr ""

#: gsgr.utils.oeioei_to_zts:4 gsgr.utils.zts_to_oeioei:4 of
msgid ""
":sphinx_autodoc_typehints_type:`\\:py\\:class\\:\\`int\\` \\| "
"\\:py\\:class\\:\\`float\\``"
msgstr ""

#: gsgr.utils.oeioei_to_zts:1 of
msgid "Helper function to convert -180 to 180deg angle to 0 to 360deg angle."
msgstr ""

#: ../../api/index.rst:2
msgid "API"
msgstr ""

